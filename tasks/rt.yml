---
- include_vars: rt_rpm_deps.yml
- name: Install RPM deps for RT
  yum:
    name: "{{ item }}"
    state: installed
  with_items: "{{ rt_rpm_deps }}"
  notify: Pull /var/cache/yum

- name: Create /opt/src
  file:
    path: /opt/src
    state: directory

- include_vars: rt_versions.yml
- name: Download RT
  get_url:
    url: https://download.bestpractical.com/pub/rt/release/{{ rt_version }}.tar.gz
    dest: /opt/src/{{ rt_version }}.tar.gz
    validate_certs: yes
    sha256sum: "{{ rt[rt_version].checksum }}"
    force: no

- name: Untar and ungzip RT
  unarchive:
    copy: no
    src: /opt/src/{{ rt_version }}.tar.gz
    dest: /opt/src
    creates: /opt/src/{{ rt_version }}
    owner: root
    group: root

- name: Configure RT
  shell: |
    source ${PERLBREW_ROOT}/etc/bashrc
    perlbrew switch 5.10.1
    ./configure \
    --enable-developer \
    --enable-graphviz \
    --enable-gd \
    --enable-gpg \
    --enable-smime
  args:
    chdir: /opt/src/{{ rt_version }}
    creates: /opt/src/{{ rt_version }}/config.status

- name: Test RT dependencies
  shell: |
    source ${PERLBREW_ROOT}/etc/bashrc
    perlbrew use 5.10.1
    make testdeps
  args:
    chdir: /opt/src/{{ rt_version }}
  register: testdeps
  changed_when: False
  failed_when: False

- include_vars: pinned_cpan_packages.yml
- name: Install pinned CPAN packages
  shell: |
    source ${PERLBREW_ROOT}/etc/bashrc
    perlbrew use 5.10.1
    cpanm {{ item }}
  notify: Sync /opt/perl5
  register: perlbrew_cpanm_result
  changed_when: >
    perlbrew_cpanm_result|success and
    perlbrew_cpanm_result.stdout_lines|length > 1
  with_items: "{{ perl_5_10_1 }}"

- name: Fix RT dependencies
  environment:
    RT_FIX_DEPS_CMD: /opt/perl5/bin/cpanm
  shell: |
    source ${PERLBREW_ROOT}/etc/bashrc
    perlbrew use 5.10.1
    make fixdeps
  args:
    chdir: /opt/src/{{ rt_version }}
  when: testdeps|failed
  
# Probably unnecessary
- name: Test RT dependencies (again)
  shell: |
    source ${PERLBREW_ROOT}/etc/bashrc
    /usr/local/bin/perlbrew switch 5.10.1
    make testdeps
  args:
    chdir: /opt/src/{{ rt_version }}
  changed_when: False
  
- name: Install RT
  shell: |
    source ${PERLBREW_ROOT}/etc/bashrc
    /usr/local/bin/perlbrew switch 5.10.1
    make install
  args:
    chdir: /opt/src/{{ rt_version }}
    creates: /opt/rt4

- name: Install RT_SiteConfig.pm
  template:
    src: RT_SiteConfig.pm
    dest: /opt/rt4/etc/RT_SiteConfig.pm
    backup: yes
  notify: Restart Apache

- name: Test rt4 database presence
  command: >
    /bin/mysql --user=root --password={{ mysql_root_password }}
    --batch --execute='show databases;'
  register: rt4_db_test
  changed_when: False

- name: Initialize RT database
  shell: echo {{ mysql_root_password }} | make initialize-database
  args:
    chdir: /opt/src//{{ rt_version }}
  when: '"rt4" not in rt4_db_test.stdout_lines'

# Might still need this?  
#- name: Set RT Mason data attributes
#  file:
#    path: /opt/rt4/var/mason_data
#    owner: root
#    group: root
#    mode: o+rx
