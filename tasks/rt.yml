---
- include_vars: rt_rpm_deps.yml
- name: Install RPM deps for RT
  yum:
    name: "{{ item }}"
    state: installed
  with_items: "{{ rt_rpm_deps }}"
  notify: Sync yum cache

- include_vars: rt_cpan_deps.yml
- name: Install RT CLI deps with CPAN Minus  
  include: perlbrew_cpanm.yml packages={{ rt_cpan_deps.CLI }}
- name: Install RT CORE deps with CPAN Minus  
  include: perlbrew_cpanm.yml packages={{ rt_cpan_deps.CORE }}
- name: Install RT DASHBOARDS deps with CPAN Minus  
  include: perlbrew_cpanm.yml packages={{ rt_cpan_deps.DASHBOARDS }}
- name: Install RT DEVELOPER deps with CPAN Minus  
  include: perlbrew_cpanm.yml packages={{ rt_cpan_deps.DEVELOPER }}
- name: Install RT FASTCGI deps with CPAN Minus  
  include: perlbrew_cpanm.yml packages={{ rt_cpan_deps.FASTCGI }}
- name: Install RT GD deps with CPAN Minus  
  include: perlbrew_cpanm.yml packages={{ rt_cpan_deps.GD }}
- name: Install RT GPG deps with CPAN Minus  
  include: perlbrew_cpanm.yml packages={{ rt_cpan_deps.GPG }}
- name: Install RT GRAPHVIZ deps with CPAN Minus  
  include: perlbrew_cpanm.yml packages={{ rt_cpan_deps.GRAPHVIZ }}
- name: Install RT HTML-DOC deps with CPAN Minus  
  include: perlbrew_cpanm.yml packages={{ rt_cpan_deps.HTMLDOC }}
- name: Install RT ICAL deps with CPAN Minus  
  include: perlbrew_cpanm.yml packages={{ rt_cpan_deps.ICAL }}
- name: Install RT MAILGATE deps with CPAN Minus  
  include: perlbrew_cpanm.yml packages={{ rt_cpan_deps.MAILGATE }}
- name: Install RT MYSQL deps with CPAN Minus  
  include: perlbrew_cpanm.yml packages={{ rt_cpan_deps.MYSQL }}
- name: Install RT SMIME deps with CPAN Minus  
  include: perlbrew_cpanm.yml packages={{ rt_cpan_deps.SMIME }}
- name: Install RT USERLOGO deps with CPAN Minus  
  include: perlbrew_cpanm.yml packages={{ rt_cpan_deps.USERLOGO }}

- name: Create /opt/src
  file:
    path: /opt/src
    state: directory
    
- name: Download RT
  get_url:
    url: https://download.bestpractical.com/pub/rt/release/{{ rt_version }}.tar.gz
    dest: /opt/src/{{ rt_version }}.tar.gz
    validate_certs: yes
    sha256sum: "{{ rt[rt_version].checksum }}"
    force: no

- name: Untar and ungzip RT
  unarchive:
    copy: no
    src: /opt/src/{{ rt_version }}.tar.gz
    dest: /opt/src
    creates: /opt/src/{{ rt_version }}
    owner: root
    group: root

- name: Configure RT
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
  shell: |
    source ${PERLBREW_ROOT}/etc/bashrc
    perlbrew switch 5.10.1
    ./configure \
    --enable-developer \
    --enable-graphviz \
    --enable-gd \
    --enable-gpg \
    --enable-smime
  args:
    chdir: /opt/src/{{ rt_version }}
    creates: /opt/src/{{ rt_version }}/etc/RT_config.pm

- name: Test RT dependencies
  shell: |
    source ${PERLBREW_ROOT}/etc/bashrc
    /usr/local/bin/perlbrew switch 5.10.1
    make testdeps
  args:
    chdir: /opt/src/{{ rt_version }}
  register: testdeps
  changed_when: False

- name: Install RT
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
  shell: |
    source ${PERLBREW_ROOT}/etc/bashrc
    /usr/local/bin/perlbrew switch 5.10.1
    make install
  args:
    chdir: /opt/src/{{ rt_version }}

- name: Install RT_SiteConfig.pm
  template:
    src: files/RT_SiteConfig.pm
    dest: /opt/rt4/etc/RT_SiteConfig.pm
    owner: apache
    group: apache
    mode: 0640
    backup: yes
  notify: Restart Apache

- name: Initialize RT database
  shell: echo {{ mysql_root_password }} | make initialize-database
  args:
    chdir: /opt/src//{{ rt_version }}

- name: Fix RT directory permissions
  file:
    path: /opt/rt4
    recurse: yes
    owner: apache
    group: apache
  