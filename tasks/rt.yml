---
- name: Install RPM deps for RT
  yum:
    name: "{{ item }}"
    state: installed
  with_items: "{{ rt_rpm_deps }}"
  notify: Sync yum cache

#- include: perlbrew_cpanm.yml

- include_vars: rt_cpan_deps.yml

# This merits a lot of explanation...      
- name: Install RT deps from perlbrew cpanm
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
  shell: |
    source ${PERLBREW_ROOT}/etc/bashrc
    perlbrew use 5.10.1
    cpanm {{ item.1 }}
  notify: Sync /opt/perl5
  register: perlbrew_cpanm_result
  changed_when: >
    perlbrew_cpanm_result|success and
    perlbrew_cpanm_result.stdout_lines|length > 1
  with_subelements:
    - rt_cpan_deps
    - packages

- name: Create /opt/src
  file:
    path: /opt/src
    state: directory
    
- name: Download RT
  get_url:
    url: https://download.bestpractical.com/pub/rt/release/{{ rt_version }}.tar.gz
    dest: /opt/src/{{ rt_version }}.tar.gz
    validate_certs: yes
    sha256sum: "{{ rt[rt_version].checksum }}"
    force: no

- name: Untar and ungzip RT
  unarchive:
    copy: no
    src: /opt/src/{{ rt_version }}.tar.gz
    dest: /opt/src
    creates: /opt/src/{{ rt_version }}
    owner: root
    group: root

- name: Configure RT
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
  shell: |
    source ${PERLBREW_ROOT}/etc/bashrc
    perlbrew switch 5.10.1
    ./configure \
    --enable-developer \
    --enable-graphviz \
    --enable-gd \
    --enable-gpg \
    --enable-smime
  args:
    chdir: /opt/src/{{ rt_version }}
    creates: /opt/src/{{ rt_version }}/etc/RT_config.pm

## Shouldn't have to do this with all deps met by perlbrew_cpanm.yml
#- name: Fix RT dependencies
#  environment:
#    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
#  shell: |
#    source ${PERLBREW_ROOT}/etc/bashrc
#    perlbrew switch 5.10.1
#    make fixdeps
#  args:
#    chdir: /opt/src/{{ rt_version }}
#  notify: Sync /opt/perl5

- name: Test RT dependencies
  shell: |
    source ${PERLBREW_ROOT}/etc/bashrc
    /usr/local/bin/perlbrew switch 5.10.1
    make testdeps
  args:
    chdir: /opt/src/{{ rt_version }}
  register: testdeps
  changed_when: False

#- name: Install RT
#  command: make install
#  args:
#    chdir: /tmp/{{ rt_version }}
#  environment:
#    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
#    PERLBREW_ROOT: /opt/perl5
#
#- name: Initialize RT database
#  shell: echo {{ mysql_root_password }} | make initialize-database
#  args:
#    chdir: /tmp/{{ rt_version }}
#
#- name: Install RT_SiteConfig.pm
#  copy:
#    src: RT_SiteConfig.pm
#    dest: /opt/rt4/etc/RT_SiteConfig.pm
#    owner: root
#    group: www-data
#    mode: 0440
#  notify: Restart Apache
